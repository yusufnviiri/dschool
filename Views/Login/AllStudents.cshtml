@model StudentIndex
@{
    ViewData["Title"] = "Students List";
}

<!-- Header Section -->
<div class="flex justify-between items-center font-poppins bg-zinc-900 py-3 px-4 text-xs sm:text-sm text-yellow-500">
    <h4 class="uppercase font-bold">Student Information</h4>
    <a class="bg-orange-600 text-white px-4 py-1 rounded hover:bg-orange-700 transition"
       asp-controller="Students" asp-action="CreateStudent">New Student</a>
</div>

<!-- Search and Filter -->
<form method="get" asp-action="Index" class="flex flex-col md:flex-row justify-between items-center gap-3 px-4 mt-4 text-sm">
    <input type="text" name="SearchTerm" value="@Model.SearchTerm"
           placeholder="Search by name or ID..."
           class="px-3 py-2 rounded border border-gray-300 w-full md:w-[40%]" />

    <select name="GradeFilter" class="px-3 py-2 rounded border border-gray-300 w-full md:w-[25%]">
        <option value="">All Grades</option>
        @foreach (var grade in Model.AllGrades.Distinct())
        {
            <option value="@grade" selected="@(grade == Model.GradeFilter)">
                @grade
            </option>
        }
    </select>

    <button type="submit"
            class="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition w-full md:w-auto">
        Apply
    </button>
</form>

<!-- No students -->
@if (Model.PagedStudents.Count == 0)
{
    <p class="text-center text-gray-500 mt-6">No students found. Add a new one below.</p>
    <div class="text-center mt-4">
        <a class="bg-orange-600 text-white px-6 py-2 rounded hover:bg-orange-700 transition"
           asp-controller="Students" asp-action="CreateStudent">
            Click to Add Student...
        </a>
    </div>
}
else
{
    <!-- Student Table -->
    <div class="overflow-x-auto mt-5 px-4">
        <table class="min-w-[700px] w-full text-sm text-left bg-white font-poppins border border-gray-200">
            <thead class="bg-zinc-800 text-white">
                <tr>
                    <th class="px-4 py-2">ID</th>
                    <th class="px-4 py-2">First Name</th>
                    <th class="px-4 py-2">Last Name</th>

                    <th class="px-4 py-2">Grade</th>
                    <th class="px-4 py-2">Stream</th>
                    <th class="px-4 py-2">Gender</th>
                    <th class="px-4 py-2">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-100 text-black">
                @foreach (var student in Model.PagedStudents)
                {
                    <tr class="hover:bg-gray-50">
                        <td class="px-4 py-2">@student.StudentId</td>
                        <td class="px-4 py-2">@student.FirstName</td>
                        <td class="px-4 py-2">@student.LastName</td>

                        <td class="px-4 py-2">@student.Grade</td>
                        <td class="px-4 py-2">@student.Stream</td>
                        <td class="px-4 py-2">@student.Gender</td>
                        <td class="px-4 py-2">
                            <a class="text-blue-600 hover:underline" asp-action="Details" asp-route-id="@student.StudentId">View</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="flex justify-center items-center gap-4 mt-6 text-sm font-poppins">
        @if (Model.HasPreviousPage)
        {
            <a asp-route-pageNumber="@(Model.PageNumber - 1)" class="px-3 py-1 border rounded hover:bg-gray-100">Previous</a>
        }

        <span>Page @Model.PageNumber of @Model.TotalPages</span>

        @if (Model.HasNextPage)
        {
            <a asp-route-pageNumber="@(Model.PageNumber + 1)" class="px-3 py-1 border rounded hover:bg-gray-100">Next</a>
        }
    </div>
}
